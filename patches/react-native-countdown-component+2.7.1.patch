diff --git a/node_modules/react-native-countdown-component/index.js b/node_modules/react-native-countdown-component/index.js
index b546b82..66a469c 100644
--- a/node_modules/react-native-countdown-component/index.js
+++ b/node_modules/react-native-countdown-component/index.js
@@ -59,22 +59,22 @@ class CountDown extends React.Component {
     AppState.removeEventListener('change', this._handleAppStateChange);
   }
 
-  componentDidUpdate(prevProps, prevState) {
-    if (this.props.until !== prevProps.until || this.props.id !== prevProps.id) {
-      this.setState({
-        lastUntil: prevState.until,
-        until: Math.max(prevProps.until, 0)
-      });
-    }
-  }
-  // componentWillReceiveProps(nextProps) {
-  //   if (this.props.until !== nextProps.until || this.props.id !== nextProps.id) {
+  // componentDidUpdate(prevProps, prevState) {
+  //   if (this.props.until !== prevProps.until || this.props.id !== prevProps.id) {
   //     this.setState({
-  //       lastUntil: this.state.until,
-  //       until: Math.max(nextProps.until, 0)
+  //       lastUntil: prevState.until,
+  //       until: Math.max(prevProps.until, 0)
   //     });
   //   }
   // }
+  componentWillReceiveProps(nextProps) {
+    if (this.props.until !== nextProps.until || this.props.id !== nextProps.id) {
+      this.setState({
+        lastUntil: this.state.until,
+        until: Math.max(nextProps.until, 0)
+      });
+    }
+  }
 
   _handleAppStateChange = currentAppState => {
     const {until, wentBackgroundAt} = this.state;
